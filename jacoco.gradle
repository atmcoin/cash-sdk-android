apply plugin: 'jacoco'

jacoco {
    toolVersion = "$jacocoVersion"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport) {

    group "Reporting"
    description "Generate Jacoco coverage reports."

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def execution = []

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']


        additionalClassDirs     fileTree(dir: "$project.buildDir/intermediates/javac/debug", excludes: fileFilter)
        additionalClassDirs  fileTree(dir: "$project.buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
        additionalSourceDirs       files("$project.projectDir/src/main/java")
        execution     << fileTree(dir: project.buildDir,
                includes: ['jacoco/testDebugUnitTest.exec','outputs/code_coverage/debugAndroidTest/connected/**/*.ec'])




    print execution
    executionData{
        files(execution)
    }



}

